plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

project.version = 'v0.4.3-beta'
applicationName = 'Potato'

project.ext.lwjglVersion = "3.3.1"
project.ext.jomlVersion = "1.10.5"

switch (org.gradle.internal.os.OperatingSystem.current()) {
    case org.gradle.internal.os.OperatingSystem.MAC_OS:
        project.ext.lwjglNatives = "natives-macos"
        break
    case org.gradle.internal.os.OperatingSystem.WINDOWS:
        project.ext.lwjglNatives = "natives-windows"
        break
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.ardikars.pcap:pcap-spi:1.4.2'
    implementation 'com.ardikars.pcap:pcap-jdk7:1.4.2'
    implementation 'com.github.weisj:darklaf-core:3.0.1'
    implementation 'com.google.code.gson:gson:2.9.1'
    implementation 'net.java.dev.jna:jna:5.12.1'
    implementation 'net.java.dev.jna:jna-platform:5.12.1'
    implementation 'com.github.kwhat:jnativehook:2.2.2'
    implementation 'org.java-websocket:Java-WebSocket:1.5.3'

    implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")
    implementation "org.lwjgl:lwjgl"
    implementation "org.lwjgl:lwjgl-assimp"
    implementation "org.lwjgl:lwjgl-glfw"
    implementation "org.lwjgl:lwjgl-openal"
    implementation "org.lwjgl:lwjgl-opengl"
    implementation "org.lwjgl:lwjgl-stb"
    runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-assimp::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-openal::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-opengl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-stb::$lwjglNatives"
    implementation "org.joml:joml:${jomlVersion}"
}

mainClassName = applicationName.toLowerCase() + '.' + applicationName


jar {
    manifest {
        attributes(
                'Main-Class': mainClassName
        )
    }
}

// Ugly solution to get version into source.
task generateSources {
    doFirst {
        def srcFile = new File(file("$buildDir/../src/main/java/" + applicationName.toLowerCase() + "/version"), "Version.java")
        srcFile.parentFile.mkdirs()
        srcFile.write("""package """ + applicationName.toLowerCase() + """.version;
/**
 * Don't edit this class. It's a gradle class to grab version from the build.gradle
 */
public class Version {
    public static final String VERSION = "$project.version";
}

""")
    }
}
compileJava.dependsOn generateSources
compileJava.source generateSources.outputs.files, sourceSets.main.java

shadowJar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
    archiveFileName = "${applicationName}-${project.version}.jar"
}

apply plugin: 'com.github.johnrengelman.shadow'