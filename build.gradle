plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
}

project.version = 'v1.1'
applicationName = 'Tomato'

repositories {
    mavenCentral()
}

dependencies {
//    implementation 'org.pcap4j:pcap4j-packetfactory-static:2.0.0-alpha.6'
//    implementation 'org.pcap4j:pcap4j-core:2.0.0-alpha.6'
    implementation 'com.ardikars.pcap:pcap-spi:1.4.1'
//    implementation 'com.ardikars.pcap:pcap-common:1.4.1'
//    implementation 'com.ardikars.pcap:pcap-codec:1.4.1'
    implementation 'com.ardikars.pcap:pcap-jdk7:1.4.1'
//    implementation 'com.ardikars.pcap:pcap-tests:1.4.1'
//    implementation 'org.slf4j:slf4j-api:1.7.25'
}

mainClassName = 'example.ExampleModTomato'


jar {
    manifest {
        attributes(
                'Main-Class': mainClassName
        )
    }
}

// Ugly solution to get version into source.
task generateSources {
    doFirst {
        def srcFile = new File(file("$buildDir/../src/main/java/example/version"), "Version.java")
        srcFile.parentFile.mkdirs()
        srcFile.write("""package example.version;
/**
 * Don't edit this class. It's a gradle class to grab version from the build.gradle
 */
public class Version {
    public static final String VERSION = "$project.version";
}

""")
    }
}
compileJava.dependsOn generateSources
compileJava.source generateSources.outputs.files, sourceSets.main.java

shadowJar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
    archiveFileName = "${applicationName}-${project.version}.jar"
}

apply plugin: 'com.github.johnrengelman.shadow'