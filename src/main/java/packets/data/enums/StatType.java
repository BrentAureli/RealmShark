package packets.data.enums;

import java.io.Serializable;

/**
 * Ordinal of stats.
 */
public enum StatType implements Serializable {
    MAX_HP_STAT(0),
    HP_STAT(1),
    SIZE_STAT(2),
    MAX_MP_STAT(3),
    MP_STAT(4),
    NEXT_LEVEL_EXP_STAT(5),
    EXP_STAT(6),
    LEVEL_STAT(7),
    INVENTORY_0_STAT(8),
    INVENTORY_1_STAT(9),
    INVENTORY_2_STAT(10),
    INVENTORY_3_STAT(11),
    INVENTORY_4_STAT(12),
    INVENTORY_5_STAT(13),
    INVENTORY_6_STAT(14),
    INVENTORY_7_STAT(15),
    INVENTORY_8_STAT(16),
    INVENTORY_9_STAT(17),
    INVENTORY_10_STAT(18),
    INVENTORY_11_STAT(19),
    ATTACK_STAT(20),
    DEFENSE_STAT(21),
    SPEED_STAT(22),
    DISCOVERABLE(23),
    SEASONAL(24),
    SKIN_ID(25),
    VITALITY_STAT(26),
    WISDOM_STAT(27),
    DEXTERITY_STAT(28),
    CONDITION_STAT(29),
    NUM_STARS_STAT(30),
    NAME_STAT(31),
    TEX1_STAT(32),
    TEX2_STAT(33),
    MERCHANDISE_TYPE_STAT(34),
    CREDITS_STAT(35),
    MERCHANDISE_PRICE_STAT(36),
    ACTIVE_STAT(37),
    ACCOUNT_ID_STAT(38),
    FAME_STAT(39),
    MERCHANDISE_CURRENCY_STAT(40),
    CONNECT_STAT(41),
    MERCHANDISE_COUNT_STAT(42),
    MERCHANDISE_MINS_LEFT_STAT(43),
    MERCHANDISE_DISCOUNT_STAT(44),
    MERCHANDISE_RANK_REQ_STAT(45),
    MAX_HP_BOOST_STAT(46),
    MAX_MP_BOOST_STAT(47),
    ATTACK_BOOST_STAT(48),
    DEFENSE_BOOST_STAT(49),
    SPEED_BOOST_STAT(50),
    VITALITY_BOOST_STAT(51),
    WISDOM_BOOST_STAT(52),
    DEXTERITY_BOOST_STAT(53),
    OWNER_ACCOUNT_ID_STAT(54),
    RANK_REQUIRED_STAT(55),
    NAME_CHOSEN_STAT(56),
    CURR_FAME_STAT(57),
    NEXT_CLASS_QUEST_FAME_STAT(58),
    LEGENDARY_RANK_STAT(59),
    SINK_LEVEL_STAT(60),
    BXP_STAT(61),
    GUILD_NAME_STAT(62),
    GUILD_RANK_STAT(63),
    BREATH_STAT(64),
    XP_BOOSTED_STAT(65),
    XP_TIMER_STAT(66),
    LD_TIMER_STAT(67),
    LT_TIMER_STAT(68),
    MATERIAL_STAT(71),
    MATERIAL_CAP_STAT(72),
    UNIQUE_DATA_STRING(80),
    PET_INSTANCE_ID_STAT(81),
    PET_NAME_STAT(82),
    PET_TYPE_STAT(83),
    PET_RARITY_STAT(84),
    PET_MAX_ABILITY_POWER_STAT(85),
    PET_FAMILY_STAT(86),
    PET_FIRST_ABILITY_POINT_STAT(87),
    PET_SECOND_ABILITY_POINT_STAT(88),
    PET_THIRD_ABILITY_POINT_STAT(89),
    PET_FIRST_ABILITY_POWER_STAT(90),
    PET_SECOND_ABILITY_POWER_STAT(91),
    PET_THIRD_ABILITY_POWER_STAT(92),
    PET_FIRST_ABILITY_TYPE_STAT(93),
    PET_SECOND_ABILITY_TYPE_STAT(94),
    PET_THIRD_ABILITY_TYPE_STAT(95),
    NEW_CON_STAT(96),
    FORTUNE_TOKEN_STAT(97),
    SUPPORTER_POINTS_STAT(98),
    SUPPORTER_STAT(99),
    TIME_JOINED_STAT(101),
    PROJECTILE_SPEED_MULT(102),
    PROJECTILE_LIFE_MULT(103),
    OPENED_AT_TIMESTAMP(104),
    EXALTED_ATK(105),
    EXALTED_DEF(106),
    EXALTED_SPD(107),
    EXALTED_VIT(108),
    EXALTED_WIS(109),
    EXALTED_DEX(110),
    EXALTED_HP(111),
    EXALTED_MP(112),
    EXALTATION_BONUS_DMG(113),
    EXALTATIONICREDUCTION(114),
    GRAVE_ACCOUNT_ID(115),
    POTION_ONE_TYPE(116),
    POTION_TWO_TYPE(117),
    POTION_THREE_TYPE(118),
    POTION_BELT(119),
    FORGE_FIRE(120),
    MODIFIERS_STAT(121),
    DIFFICULTY_STAT(122),
    OBJECT_IS_ACTIVE_STAT(123),
    POWER_LEVEL_STAT(124),
    STYLE_STAT(125),
    STYLE_TIMESTAMP_STAT(126),
    DUST_STAT(127),
    CRUCIBLE_STAT(128),
    SHADER_STAT(129),
    BACKPACK_SLOTS_STAT(130),
    BACKPACK_0_STAT(131),
    BACKPACK_1_STAT(132),
    BACKPACK_2_STAT(133),
    BACKPACK_3_STAT(134),
    BACKPACK_4_STAT(135),
    BACKPACK_5_STAT(136),
    BACKPACK_6_STAT(137),
    BACKPACK_7_STAT(138),
    BACKPACK_8_STAT(139),
    BACKPACK_9_STAT(140),
    BACKPACK_10_STAT(141),
    BACKPACK_11_STAT(142),
    BACKPACK_12_STAT(143),
    BACKPACK_13_STAT(144),
    BACKPACK_14_STAT(145),
    BACKPACK_15_STAT(146),
    DUST_AMOUNT_STAT(147),
    ;

    private final int index;

    StatType(int i) {
        index = i;
    }

    public int get() {
        return index;
    }

    public static StatType byOrdinal(int ord) {
        for (StatType o : StatType.values()) {
            if (o.index == ord) {
                return o;
            }
        }
        return null;
    }
}
